//
//  ECO.swift
//  Endgame
//
//  Created by Todd Olsen on 9/25/16.
//
//

import Foundation

/// A model of a chess opening, according to the standards of the Encyclopedia of Chess Openeings.
/// https://en.wikipedia.org/wiki/Encyclopaedia_of_Chess_Openings

public struct ECO: Hashable {

    public enum Code: String {
        case a00 = "A00"
        case a01 = "A01"
        case a02 = "A02"
        case a03 = "A03"
        case a04 = "A04"
        case a05 = "A05"
        case a06 = "A06"
        case a07 = "A07"
        case a08 = "A08"
        case a09 = "A09"
        case a10 = "A10"
        case a11 = "A11"
        case a12 = "A12"
        case a13 = "A13"
        case a14 = "A14"
        case a15 = "A15"
        case a16 = "A16"
        case a17 = "A17"
        case a18 = "A18"
        case a19 = "A19"
        case a20 = "A20"
        case a21 = "A21"
        case a22 = "A22"
        case a23 = "A23"
        case a24 = "A24"
        case a25 = "A25"
        case a26 = "A26"
        case a27 = "A27"
        case a28 = "A28"
        case a29 = "A29"
        case a30 = "A30"
        case a31 = "A31"
        case a32 = "A32"
        case a33 = "A33"
        case a34 = "A34"
        case a35 = "A35"
        case a36 = "A36"
        case a37 = "A37"
        case a38 = "A38"
        case a39 = "A39"
        case a40 = "A40"
        case a41 = "A41"
        case a42 = "A42"
        case a43 = "A43"
        case a44 = "A44"
        case a45 = "A45"
        case a46 = "A46"
        case a47 = "A47"
        case a48 = "A48"
        case a49 = "A49"
        case a50 = "A50"
        case a51 = "A51"
        case a52 = "A52"
        case a53 = "A53"
        case a54 = "A54"
        case a55 = "A55"
        case a56 = "A56"
        case a57 = "A57"
        case a58 = "A58"
        case a59 = "A59"
        case a60 = "A60"
        case a61 = "A61"
        case a62 = "A62"
        case a63 = "A63"
        case a64 = "A64"
        case a65 = "A65"
        case a66 = "A66"
        case a67 = "A67"
        case a68 = "A68"
        case a69 = "A69"
        case a70 = "A70"
        case a71 = "A71"
        case a72 = "A72"
        case a73 = "A73"
        case a74 = "A74"
        case a75 = "A75"
        case a76 = "A76"
        case a77 = "A77"
        case a78 = "A78"
        case a79 = "A79"
        case a80 = "A80"
        case a81 = "A81"
        case a82 = "A82"
        case a83 = "A83"
        case a84 = "A84"
        case a85 = "A85"
        case a86 = "A86"
        case a87 = "A87"
        case a88 = "A88"
        case a89 = "A89"
        case a90 = "A90"
        case a91 = "A91"
        case a92 = "A92"
        case a93 = "A93"
        case a94 = "A94"
        case a95 = "A95"
        case a96 = "A96"
        case a97 = "A97"
        case a98 = "A98"
        case a99 = "A99"
        case b00 = "B00"
        case b01 = "B01"
        case b02 = "B02"
        case b03 = "B03"
        case b04 = "B04"
        case b05 = "B05"
        case b06 = "B06"
        case b07 = "B07"
        case b08 = "B08"
        case b09 = "B09"
        case b10 = "B10"
        case b11 = "B11"
        case b12 = "B12"
        case b13 = "B13"
        case b14 = "B14"
        case b15 = "B15"
        case b16 = "B16"
        case b17 = "B17"
        case b18 = "B18"
        case b19 = "B19"
        case b20 = "B20"
        case b21 = "B21"
        case b22 = "B22"
        case b23 = "B23"
        case b24 = "B24"
        case b25 = "B25"
        case b26 = "B26"
        case b27 = "B27"
        case b28 = "B28"
        case b29 = "B29"
        case b30 = "B30"
        case b31 = "B31"
        case b32 = "B32"
        case b33 = "B33"
        case b34 = "B34"
        case b35 = "B35"
        case b36 = "B36"
        case b37 = "B37"
        case b38 = "B38"
        case b39 = "B39"
        case b40 = "B40"
        case b41 = "B41"
        case b42 = "B42"
        case b43 = "B43"
        case b44 = "B44"
        case b45 = "B45"
        case b46 = "B46"
        case b47 = "B47"
        case b48 = "B48"
        case b49 = "B49"
        case b50 = "B50"
        case b51 = "B51"
        case b52 = "B52"
        case b53 = "B53"
        case b54 = "B54"
        case b55 = "B55"
        case b56 = "B56"
        case b57 = "B57"
        case b58 = "B58"
        case b59 = "B59"
        case b60 = "B60"
        case b61 = "B61"
        case b62 = "B62"
        case b63 = "B63"
        case b64 = "B64"
        case b65 = "B65"
        case b66 = "B66"
        case b67 = "B67"
        case b68 = "B68"
        case b69 = "B69"
        case b70 = "B70"
        case b71 = "B71"
        case b72 = "B72"
        case b73 = "B73"
        case b74 = "B74"
        case b75 = "B75"
        case b76 = "B76"
        case b77 = "B77"
        case b78 = "B78"
        case b79 = "B79"
        case b80 = "B80"
        case b81 = "B81"
        case b82 = "B82"
        case b83 = "B83"
        case b84 = "B84"
        case b85 = "B85"
        case b86 = "B86"
        case b87 = "B87"
        case b88 = "B88"
        case b89 = "B89"
        case b90 = "B90"
        case b91 = "B91"
        case b92 = "B92"
        case b93 = "B93"
        case b94 = "B94"
        case b95 = "B95"
        case b96 = "B96"
        case b97 = "B97"
        case b98 = "B98"
        case b99 = "B99"
        case c00 = "C00"
        case c01 = "C01"
        case c02 = "C02"
        case c03 = "C03"
        case c04 = "C04"
        case c05 = "C05"
        case c06 = "C06"
        case c07 = "C07"
        case c08 = "C08"
        case c09 = "C09"
        case c10 = "C10"
        case c11 = "C11"
        case c12 = "C12"
        case c13 = "C13"
        case c14 = "C14"
        case c15 = "C15"
        case c16 = "C16"
        case c17 = "C17"
        case c18 = "C18"
        case c19 = "C19"
        case c20 = "C20"
        case c21 = "C21"
        case c22 = "C22"
        case c23 = "C23"
        case c24 = "C24"
        case c25 = "C25"
        case c26 = "C26"
        case c27 = "C27"
        case c28 = "C28"
        case c29 = "C29"
        case c30 = "C30"
        case c31 = "C31"
        case c32 = "C32"
        case c33 = "C33"
        case c34 = "C34"
        case c35 = "C35"
        case c36 = "C36"
        case c37 = "C37"
        case c38 = "C38"
        case c39 = "C39"
        case c40 = "C40"
        case c41 = "C41"
        case c42 = "C42"
        case c43 = "C43"
        case c44 = "C44"
        case c45 = "C45"
        case c46 = "C46"
        case c47 = "C47"
        case c48 = "C48"
        case c49 = "C49"
        case c50 = "C50"
        case c51 = "C51"
        case c52 = "C52"
        case c53 = "C53"
        case c54 = "C54"
        case c55 = "C55"
        case c56 = "C56"
        case c57 = "C57"
        case c58 = "C58"
        case c59 = "C59"
        case c60 = "C60"
        case c61 = "C61"
        case c62 = "C62"
        case c63 = "C63"
        case c64 = "C64"
        case c65 = "C65"
        case c66 = "C66"
        case c67 = "C67"
        case c68 = "C68"
        case c69 = "C69"
        case c70 = "C70"
        case c71 = "C71"
        case c72 = "C72"
        case c73 = "C73"
        case c74 = "C74"
        case c75 = "C75"
        case c76 = "C76"
        case c77 = "C77"
        case c78 = "C78"
        case c79 = "C79"
        case c80 = "C80"
        case c81 = "C81"
        case c82 = "C82"
        case c83 = "C83"
        case c84 = "C84"
        case c85 = "C85"
        case c86 = "C86"
        case c87 = "C87"
        case c88 = "C88"
        case c89 = "C89"
        case c90 = "C90"
        case c91 = "C91"
        case c92 = "C92"
        case c93 = "C93"
        case c94 = "C94"
        case c95 = "C95"
        case c96 = "C96"
        case c97 = "C97"
        case c98 = "C98"
        case c99 = "C99"
        case d00 = "D00"
        case d01 = "D01"
        case d02 = "D02"
        case d03 = "D03"
        case d04 = "D04"
        case d05 = "D05"
        case d06 = "D06"
        case d07 = "D07"
        case d08 = "D08"
        case d09 = "D09"
        case d10 = "D10"
        case d11 = "D11"
        case d12 = "D12"
        case d13 = "D13"
        case d14 = "D14"
        case d15 = "D15"
        case d16 = "D16"
        case d17 = "D17"
        case d18 = "D18"
        case d19 = "D19"
        case d20 = "D20"
        case d21 = "D21"
        case d22 = "D22"
        case d23 = "D23"
        case d24 = "D24"
        case d25 = "D25"
        case d26 = "D26"
        case d27 = "D27"
        case d28 = "D28"
        case d29 = "D29"
        case d30 = "D30"
        case d31 = "D31"
        case d32 = "D32"
        case d33 = "D33"
        case d34 = "D34"
        case d35 = "D35"
        case d36 = "D36"
        case d37 = "D37"
        case d38 = "D38"
        case d39 = "D39"
        case d40 = "D40"
        case d41 = "D41"
        case d42 = "D42"
        case d43 = "D43"
        case d44 = "D44"
        case d45 = "D45"
        case d46 = "D46"
        case d47 = "D47"
        case d48 = "D48"
        case d49 = "D49"
        case d50 = "D50"
        case d51 = "D51"
        case d52 = "D52"
        case d53 = "D53"
        case d54 = "D54"
        case d55 = "D55"
        case d56 = "D56"
        case d57 = "D57"
        case d58 = "D58"
        case d59 = "D59"
        case d60 = "D60"
        case d61 = "D61"
        case d62 = "D62"
        case d63 = "D63"
        case d64 = "D64"
        case d65 = "D65"
        case d66 = "D66"
        case d67 = "D67"
        case d68 = "D68"
        case d69 = "D69"
        case d70 = "D70"
        case d71 = "D71"
        case d72 = "D72"
        case d73 = "D73"
        case d74 = "D74"
        case d75 = "D75"
        case d76 = "D76"
        case d77 = "D77"
        case d78 = "D78"
        case d79 = "D79"
        case d80 = "D80"
        case d81 = "D81"
        case d82 = "D82"
        case d83 = "D83"
        case d84 = "D84"
        case d85 = "D85"
        case d86 = "D86"
        case d87 = "D87"
        case d88 = "D88"
        case d89 = "D89"
        case d90 = "D90"
        case d91 = "D91"
        case d92 = "D92"
        case d93 = "D93"
        case d94 = "D94"
        case d95 = "D95"
        case d96 = "D96"
        case d97 = "D97"
        case d98 = "D98"
        case d99 = "D99"
        case e00 = "E00"
        case e01 = "E01"
        case e02 = "E02"
        case e03 = "E03"
        case e04 = "E04"
        case e05 = "E05"
        case e06 = "E06"
        case e07 = "E07"
        case e08 = "E08"
        case e09 = "E09"
        case e10 = "E10"
        case e11 = "E11"
        case e12 = "E12"
        case e13 = "E13"
        case e14 = "E14"
        case e15 = "E15"
        case e16 = "E16"
        case e17 = "E17"
        case e18 = "E18"
        case e19 = "E19"
        case e20 = "E20"
        case e21 = "E21"
        case e22 = "E22"
        case e23 = "E23"
        case e24 = "E24"
        case e25 = "E25"
        case e26 = "E26"
        case e27 = "E27"
        case e28 = "E28"
        case e29 = "E29"
        case e30 = "E30"
        case e31 = "E31"
        case e32 = "E32"
        case e33 = "E33"
        case e34 = "E34"
        case e35 = "E35"
        case e36 = "E36"
        case e37 = "E37"
        case e38 = "E38"
        case e39 = "E39"
        case e40 = "E40"
        case e41 = "E41"
        case e42 = "E42"
        case e43 = "E43"
        case e44 = "E44"
        case e45 = "E45"
        case e46 = "E46"
        case e47 = "E47"
        case e48 = "E48"
        case e49 = "E49"
        case e50 = "E50"
        case e51 = "E51"
        case e52 = "E52"
        case e53 = "E53"
        case e54 = "E54"
        case e55 = "E55"
        case e56 = "E56"
        case e57 = "E57"
        case e58 = "E58"
        case e59 = "E59"
        case e60 = "E60"
        case e61 = "E61"
        case e62 = "E62"
        case e63 = "E63"
        case e64 = "E64"
        case e65 = "E65"
        case e66 = "E66"
        case e67 = "E67"
        case e68 = "E68"
        case e69 = "E69"
        case e70 = "E70"
        case e71 = "E71"
        case e72 = "E72"
        case e73 = "E73"
        case e74 = "E74"
        case e75 = "E75"
        case e76 = "E76"
        case e77 = "E77"
        case e78 = "E78"
        case e79 = "E79"
        case e80 = "E80"
        case e81 = "E81"
        case e82 = "E82"
        case e83 = "E83"
        case e84 = "E84"
        case e85 = "E85"
        case e86 = "E86"
        case e87 = "E87"
        case e88 = "E88"
        case e89 = "E89"
        case e90 = "E90"
        case e91 = "E91"
        case e92 = "E92"
        case e93 = "E93"
        case e94 = "E94"
        case e95 = "E95"
        case e96 = "E96"
        case e97 = "E97"
        case e98 = "E98"
        case e99 = "E99"
    }

    public let code: Code
    public let name: String
    public let moves: String

    public init?(code: String, name: String, moves: String) {
        guard let c = Code(rawValue: code) else {
            return nil
        }
        self.code = c
        self.name = name
        self.moves = moves
    }

    public static let all: [ECO] = {
        let url = Bundle(for: Game.self).url(forResource: "ECO", withExtension: "txt")!
        return try! String(contentsOf: url).split(by: Character.newlines)
            .map { $0
                .trimmingCharacters(in: CharacterSet.whitespaces)
                .components(separatedBy: "\t") }
            .flatMap { ECO(code: $0[0],
                           name: $0[1],
                           moves: $0[2].trimmingCharacters(in: CharacterSet.whitespaces.union(CharacterSet.punctuationCharacters))) }
    }()

    public static let codes: [String: ECO] = {

        var result = [String: ECO]()
        ECO.all.forEach { result[$0.moves.stripped] = $0 }
        return result

    }()

    public var hashValue: Int {
        return code.hashValue ^ name.hashValue
    }

    public static func == (lhs: ECO, rhs: ECO) -> Bool {
        return lhs.code == rhs.code && lhs.name == rhs.name && lhs.moves == rhs.moves
    }
}

extension NSRange {
    func range(for str: String) -> Range<String.Index>? {
        guard location != NSNotFound else { return nil }
        guard let fromUTFIndex = str.utf16.index(str.utf16.startIndex, offsetBy: location, limitedBy: str.utf16.endIndex) else { return nil }
        guard let toUTFIndex = str.utf16.index(fromUTFIndex, offsetBy: length, limitedBy: str.utf16.endIndex) else { return nil }
        guard let fromIndex = String.Index(fromUTFIndex, within: str) else { return nil }
        guard let toIndex = String.Index(toUTFIndex, within: str) else { return nil }
        return fromIndex ..< toIndex
    }
}

extension String {
    var stripped: String {
        let regex = try! NSRegularExpression(pattern: "[0-9]*\\.", options: NSRegularExpression.Options.caseInsensitive)
        let matches = regex.matches(in: self, options: [], range: NSRange(location: 0, length: self.characters.count))
        var result = self
        for match in matches.reversed() {
            result = result.replacingCharacters(in: match.range.range(for: result)!, with: "")
        }
        return result
    }
}


